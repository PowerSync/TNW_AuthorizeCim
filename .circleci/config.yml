version: 2

jobs:
  deploy:
    machine:
      enabled: true
    steps:
    - run:
        name: Deploy Over SSH
        command: |
          ssh $SSH_USER@$SSH_HOST "./release"
  m242-commerce-php74: &base-image
    docker:
    - image: powersync/magento-builds:m242-commerce-php74
      auth:
        username: $DOCKER_USER
        password: $DOCKER_PASS
    - image: circleci/mysql:8.0
      environment:
        MYSQL_PASSWORD: mage
        MYSQL_USER: mage
        MYSQL_DATABASE: magento
        MYSQL_ROOT_PASSWORD: docker
    - image: elasticsearch:7.12.0
      environment:
        - cluster.name: elasticsearch
        - transport.host: localhost
        - network.host: 127.0.0.1
        - http.port: 9200
        - discovery.type: single-node
        - xpack.security.enabled: false
        - ES_JAVA_OPTS: -Xms750m -Xmx750m
  working_directory: ~/tnw_extension
  steps:
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s
      - run:
          name: Installing Magento
          command: |
            cd /var/www/html/magento/
            composer config -g http-basic.repo.magento.com $MAGENTO_REPO_LOGIN $MAGENTO_REPO_PASSWORD
            ./bin/magento setup:install --backend-frontname admin --db-host 127.0.0.1 --db-prefix tnwc_ --db-name magento --db-user mage --db-password mage --base-url http://magento-qa.box/ --language en_US --timezone America/Chicago --currency USD --admin-lastname Admin --admin-firstname Admin --admin-email admin@example.com --admin-user admin --admin-password admin123 --cleanup-database --use-rewrites 1
            ./bin/magento --version
      - run:
          name: Configure our repository
          command: |
            cd /var/www/html/magento/
            composer config -g http-basic.dist.powersync.biz $TECHWEB_REPO_LOGIN $TECHNWEB_REPO_PASSWORD
            composer config --global repositories.powersync composer https://dist.powersync.biz
      - run:
          name: Checkout related modules
          command: |
            cd /var/www/html/magento/
            for package in $PACKAGES_NAME; do
              NEW_MODULE_VERSION=(`composer show -al $package |grep '^latest '|awk '{print $3}'|sed 's/,//'`);
              composer require $package=$NEW_MODULE_VERSION
            done
      - run:
          name: Install the Extension
          command: |
            cd /var/www/html/magento
            rm -rf ./generated/*
            ./bin/magento module:status
            ./bin/magento module:enable --all
            ./bin/magento setup:upgrade
      - run:
          name: Compile the Code
          command: |
            cd /var/www/html/magento
            php bin/magento setup:di:compile
            php bin/magento deploy:mode:set developer

  m242-open_source-php74:
    <<: *base-image
    docker:
      - image: powersync/magento-builds:m242-open_source-php74
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
      - image: circleci/mysql:8.0
        environment:
          MYSQL_PASSWORD: mage
          MYSQL_USER: mage
          MYSQL_DATABASE: magento
          MYSQL_ROOT_PASSWORD: docker
      - image: elasticsearch:7.12.0
        environment:
          - cluster.name: elasticsearch
          - transport.host: localhost
          - network.host: 127.0.0.1
          - http.port: 9200
          - discovery.type: single-node
          - xpack.security.enabled: false
          - ES_JAVA_OPTS: -Xms750m -Xmx750m

  magento-coding-standard:
    docker:
      - image: powersync/magento-builds:m242-commerce-php74
        auth:
          username: $DOCKER_USER
          password: $DOCKER_PASS
    working_directory: ~/tnw_extension
    steps:
      - checkout
      - run:
          name: Run Magento Coding Standard
          command: |
            /var/www/html/magento/vendor/bin/phpcs --standard=Magento2 --extensions=php,phtml --severity=10 --ignore-annotations $CIRCLE_WORKING_DIRECTORY

    
  update-wiki:
    docker:
      - image: circleci/php:7.1-apache-node-browsers
    steps:
      - run:
          name: Prepare for wiki update
          command: |
            mkdir -p ~/.composer/
            echo '{}'>~/.composer/composer.json
            composer config -g http-basic.dist.powersync.biz $TECHWEB_REPO_LOGIN $TECHNWEB_REPO_PASSWORD
            composer config --global repositories.powersync composer https://dist.powersync.biz
      - run:
          name: Push changes to wiki
          command: |
            cd ~/.composer/

            for package in $PACKAGES_NAME; do

              NEW_MODULE_VERSION=(`composer show -al $package |grep '^latest '|awk '{print $3}'|sed 's/,//'`);
              PAGE_TITLE='_'
              PAGE_TITLE+=`echo "$package" | sed 's/\//_/'`

              PAGE_SEARCH_DATA=`curl -u $JIRA_LOGIN:$JIRA_TOKEN -X GET "https://technweb.atlassian.net/wiki/rest/api/content?title=$PAGE_TITLE&limit=1&expand=version.number,body.view,body.storage"`

              PAGE_ID=`echo $PAGE_SEARCH_DATA|jq -r '.results[0].id'`
              PAGE_VERSION=`echo $PAGE_SEARCH_DATA|jq -r '.results[0].version.number'`
              PAGE_CURRENT_BODY_STORAGE=`echo $PAGE_SEARCH_DATA|jq -r '.results[0].body.storage.value'`


              PAGE_NEW_BODY_STORAGE=`echo $PAGE_CURRENT_BODY_STORAGE|sed "s/[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}/$NEW_MODULE_VERSION/g"|sed 's/\"/\\\"/g'`

              ((PAGE_VERSION++))

              POST_DATA="{
                  \"id\": $PAGE_ID,
                  \"type\": \"page\",
                  \"title\": \"$PAGE_TITLE\",
                  \"body\": {
                    \"storage\": {
                      \"value\": \"$PAGE_NEW_BODY_STORAGE\",
                      \"representation\": \"storage\"
                    }
                  },
                  \"version\": {
                    \"number\": $PAGE_VERSION
                  }
                }"

              curl --request PUT \
                --url "https://technweb.atlassian.net/wiki/rest/api/content/$PAGE_ID" \
                --user "$JIRA_LOGIN:$JIRA_TOKEN" \
                --header 'Accept: application/json' \
                --header 'Content-Type: application/json' \
                --data "$POST_DATA"

            done

workflows:
  version: 2

  test-deploy-wiki:
    jobs:
     
      - m242-commerce-php74:
          context: powersync
          requires:
            - magento-coding-standard
          filters:
            branches:
              only:
                - v.2.4

     - check-composer-installation:
          context: powersync
          requires:
          - deploy

     - update-wiki:
          context: powersync
          requires:
          - check-composer-installation
